{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, onUnmounted, computed, nextTick, inject } from 'vue';\nimport * as echarts from 'echarts';\nimport markerIcon from '@/assets/imgs/icons8-圈向上-64.png';\n\n// 注入全局SSE服务\n\nexport default {\n  __name: 'details',\n  setup(__props) {\n    const sseService = inject('sseService');\n\n    // 核心数据\n    const weather = ref({\n      date: `${new Date().getMonth() + 1}月${new Date().getDate()}日`,\n      weekday: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][new Date().getDay()],\n      weather: '晴',\n      tempMin: 18,\n      tempMax: 30,\n      windDir: '东风',\n      windForce: '3级'\n    });\n    const currDate = ref(new Date().toLocaleDateString());\n    const temp = ref(22);\n    const hum = ref(50);\n    const tempHistory = ref([{\n      time: '00:00',\n      value: 22\n    }, {\n      time: '00:05',\n      value: 22.5\n    }]);\n    const humHistory = ref([{\n      time: '00:00',\n      value: 50\n    }, {\n      time: '00:05',\n      value: 49.5\n    }]);\n    const tempRange = {\n      min: 18,\n      max: 26\n    };\n    const humRange = {\n      min: 40,\n      max: 60\n    };\n\n    // 设备数据\n    const water = ref({\n      status: 0,\n      value: 0\n    });\n    const weight = ref(50);\n    const devices = ref([{\n      name: '水泵',\n      status: 0\n    }, {\n      name: '电机',\n      status: 0\n    }, {\n      name: '灯光',\n      status: 0\n    }, {\n      name: '阀门',\n      status: 0\n    }, {\n      name: '加热',\n      status: 0\n    }, {\n      name: '风机',\n      status: 0\n    }]);\n\n    // 连接状态\n    const mainConn = ref(false);\n    const lastUpdate = ref('-');\n    const maxHistory = 10;\n\n    // 进度条相关配置\n    const barHeight = ref(120); // 进度条高度\n    const colors = ref(['#43a047', '#8bc34a', '#cddc39']); // 进度条渐变颜色\n\n    // 计算属性\n    const weightPercent = computed(() => Math.max(0, Math.min(100, Math.round(weight.value))));\n    const tempWarn = computed(() => temp.value < tempRange.min || temp.value > tempRange.max);\n    const humWarn = computed(() => hum.value < humRange.min || hum.value > humRange.max);\n    const waterAlarm = computed(() => water.value.value > 8.5 || water.value.value < 2.0);\n    // 生成渐变背景\n    const gradientBg = computed(() => `linear-gradient(to top, ${colors.value.join(', ')})`);\n\n    // 地图相关\n    const lnglat = ref('');\n    const course = ref('');\n    const mapStatus = ref('地图加载中...');\n    const mapConn = ref(false);\n    let map, marker;\n\n    // 图表实例\n    let tempChart, humChart;\n\n    // 图表初始化与渲染\n    const initCharts = () => {\n      const tempDom = document.getElementById('tempChart');\n      const humDom = document.getElementById('humChart');\n      if (!tempDom || !humDom) return;\n      tempChart = echarts.init(tempDom);\n      humChart = echarts.init(humDom);\n      window.addEventListener('resize', () => {\n        tempChart?.resize();\n        humChart?.resize();\n      });\n      renderCharts();\n    };\n    const renderCharts = () => {\n      // 温度图表配置（保持不变）\n      tempChart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: tempHistory.value.map(i => i.time),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '温度(°C)',\n          min: Math.min(...tempHistory.value.map(i => i.value), tempRange.min) - 2,\n          max: Math.max(...tempHistory.value.map(i => i.value), tempRange.max) + 2,\n          markLine: {\n            data: [{\n              yAxis: tempRange.min,\n              name: '最低阈值',\n              lineStyle: {\n                color: 'red'\n              }\n            }, {\n              yAxis: tempRange.max,\n              name: '最高阈值',\n              lineStyle: {\n                color: 'red'\n              }\n            }]\n          }\n        },\n        series: [{\n          name: '温度',\n          type: 'line',\n          data: tempHistory.value.map(i => i.value),\n          smooth: true,\n          lineStyle: {\n            color: '#e74c3c'\n          },\n          itemStyle: {\n            color: '#e74c3c'\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(231,76,60,0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(231,76,60,0)'\n            }])\n          }\n        }]\n      });\n\n      // 湿度图表配置（保持不变）\n      humChart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: humHistory.value.map(i => i.time),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '湿度(%)',\n          min: Math.min(...humHistory.value.map(i => i.value), humRange.min) - 5,\n          max: Math.max(...humHistory.value.map(i => i.value), humRange.max) + 5,\n          markLine: {\n            data: [{\n              yAxis: humRange.min,\n              name: '最低阈值',\n              lineStyle: {\n                color: 'blue'\n              }\n            }, {\n              yAxis: humRange.max,\n              name: '最高阈值',\n              lineStyle: {\n                color: 'blue'\n              }\n            }]\n          }\n        },\n        series: [{\n          name: '湿度',\n          type: 'line',\n          data: humHistory.value.map(i => i.value),\n          smooth: true,\n          lineStyle: {\n            color: '#3498db'\n          },\n          itemStyle: {\n            color: '#3498db'\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(52,152,219,0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(52,152,219,0)'\n            }])\n          }\n        }]\n      });\n    };\n\n    // 历史数据更新\n    const updateHistory = (ref, val, time) => {\n      ref.value.push({\n        time,\n        value: val\n      });\n      if (ref.value.length > maxHistory) ref.value.shift();\n    };\n\n    // 地图初始化\n    const initMap = () => {\n      const loadMap = () => new Promise((res, rej) => {\n        if (window.AMap) return res(window.AMap);\n        const script = document.createElement('script');\n        script.src = 'https://webapi.amap.com/maps?v=1.4.15&key=你的高德Key';\n        script.onload = () => res(window.AMap || rej(new Error('地图加载失败')));\n        script.onerror = () => rej(new Error('地图脚本加载失败'));\n        document.head.appendChild(script);\n      });\n      loadMap().then(AMap => {\n        map = new AMap.Map('map', {\n          resizeEnable: true,\n          zoom: 16,\n          center: [116.397470, 39.908823],\n          viewMode: '2D'\n        });\n        marker = new AMap.Marker({\n          position: [116.397470, 39.908823],\n          icon: new AMap.Icon({\n            size: new AMap.Size(32, 32),\n            image: markerIcon,\n            imageSize: new AMap.Size(64, 64),\n            imageOffset: new AMap.Pixel(-16, -16)\n          }),\n          anchor: 'center'\n        });\n        map.add(marker);\n        map.on('complete', () => mapStatus.value = '地图已就绪');\n        map.on('error', () => mapStatus.value = '地图渲染错误');\n      }).catch(err => {\n        mapStatus.value = '地图加载失败';\n        console.error(err);\n      });\n    };\n\n    // 数据刷新\n    const refresh = () => {\n      sseService.closeConnections();\n      sseService.initConnections();\n      renderCharts();\n      lastUpdate.value = new Date().toLocaleString();\n    };\n\n    // 处理主数据更新的回调函数\n    const handleMainData = data => {\n      try {\n        temp.value = data.tem || data.T || temp.value;\n        hum.value = data.hum || data.H || hum.value;\n        water.value = {\n          status: data.waterStatus || 0,\n          value: data.Wal || data.waterlevel || 0\n        };\n        weight.value = Math.max(0, Math.min(100, parseFloat(data.weight) || 0));\n\n        // 更新设备状态\n        devices.value.find(d => d.name === '水泵').status = data.pump || 0;\n        devices.value.find(d => d.name === '电机').status = data.motor || 0;\n        devices.value.find(d => d.name === '灯光').status = data.light || 0;\n        devices.value.find(d => d.name === '阀门').status = data.door || 0;\n        devices.value.find(d => d.name === '加热').status = data.heat || 0;\n        devices.value.find(d => d.name === '风机').status = data.fan || 0;\n\n        // 更新历史数据\n        const timeStr = new Date().toLocaleTimeString();\n        updateHistory(tempHistory, temp.value, timeStr);\n        updateHistory(humHistory, hum.value, timeStr);\n        lastUpdate.value = new Date().toLocaleString();\n        currDate.value = new Date().toLocaleDateString();\n        renderCharts();\n        mainConn.value = true;\n      } catch (e) {\n        mainConn.value = false;\n        console.error('处理主数据失败:', e);\n      }\n    };\n\n    // 处理地图数据更新的回调函数\n    const handleMapData = data => {\n      try {\n        if (data.lng !== undefined && data.lat !== undefined) {\n          const lng = parseFloat(data.lng),\n            lat = parseFloat(data.lat);\n          if (!isNaN(lng) && !isNaN(lat) && lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90) {\n            lnglat.value = `${lng.toFixed(6)},${lat.toFixed(6)}`;\n            marker?.setPosition([lng + 0.01, lat - 0.001]);\n            map?.panTo([lng + 0.01, lat - 0.001], {\n              duration: 300\n            });\n          }\n        }\n        if (data.cogt !== undefined) {\n          const angle = parseFloat(data.cogt);\n          if (!isNaN(angle)) {\n            course.value = `${angle.toFixed(1)}°`;\n            marker?.setRotation((angle % 360 + 360) % 360);\n          }\n        }\n        mapConn.value = true;\n      } catch (e) {\n        mapConn.value = false;\n        console.error('处理地图数据失败:', e);\n      }\n    };\n\n    // 处理连接状态变化\n    const handleConnectionStatus = status => {\n      mainConn.value = status;\n      mapConn.value = status;\n    };\n\n    // 生命周期\n    onMounted(() => {\n      nextTick(() => {\n        initCharts();\n        initMap();\n\n        // 订阅SSE数据更新\n        sseService.onMainData(handleMainData);\n        sseService.onMapData(handleMapData);\n        sseService.onConnectionStatus(handleConnectionStatus);\n\n        // 初始刷新一次数据\n        refresh();\n      });\n    });\n    onUnmounted(() => {\n      // 取消订阅\n      sseService.offMainData(handleMainData);\n      sseService.offMapData(handleMapData);\n      sseService.offConnectionStatus(handleConnectionStatus);\n\n      // 清理图表和地图\n      tempChart?.dispose();\n      humChart?.dispose();\n      map?.destroy();\n    });\n    return {\n      __sfc: true,\n      sseService,\n      weather,\n      currDate,\n      temp,\n      hum,\n      tempHistory,\n      humHistory,\n      tempRange,\n      humRange,\n      water,\n      weight,\n      devices,\n      mainConn,\n      lastUpdate,\n      maxHistory,\n      barHeight,\n      colors,\n      weightPercent,\n      tempWarn,\n      humWarn,\n      waterAlarm,\n      gradientBg,\n      lnglat,\n      course,\n      mapStatus,\n      mapConn,\n      map,\n      marker,\n      tempChart,\n      humChart,\n      initCharts,\n      renderCharts,\n      updateHistory,\n      initMap,\n      refresh,\n      handleMainData,\n      handleMapData,\n      handleConnectionStatus\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","computed","nextTick","inject","echarts","markerIcon","sseService","weather","date","Date","getMonth","getDate","weekday","getDay","tempMin","tempMax","windDir","windForce","currDate","toLocaleDateString","temp","hum","tempHistory","time","value","humHistory","tempRange","min","max","humRange","water","status","weight","devices","name","mainConn","lastUpdate","maxHistory","barHeight","colors","weightPercent","Math","round","tempWarn","humWarn","waterAlarm","gradientBg","join","lnglat","course","mapStatus","mapConn","map","marker","tempChart","humChart","initCharts","tempDom","document","getElementById","humDom","init","window","addEventListener","resize","renderCharts","setOption","tooltip","trigger","grid","left","right","bottom","containLabel","xAxis","type","data","i","axisLabel","rotate","yAxis","markLine","lineStyle","color","series","smooth","itemStyle","areaStyle","graphic","LinearGradient","offset","updateHistory","val","push","length","shift","initMap","loadMap","Promise","res","rej","AMap","script","createElement","src","onload","Error","onerror","head","appendChild","then","Map","resizeEnable","zoom","center","viewMode","Marker","position","icon","Icon","size","Size","image","imageSize","imageOffset","Pixel","anchor","add","on","catch","err","console","error","refresh","closeConnections","initConnections","toLocaleString","handleMainData","tem","T","H","waterStatus","Wal","waterlevel","parseFloat","find","d","pump","motor","light","door","heat","fan","timeStr","toLocaleTimeString","e","handleMapData","lng","undefined","lat","isNaN","toFixed","setPosition","panTo","duration","cogt","angle","setRotation","handleConnectionStatus","onMainData","onMapData","onConnectionStatus","offMainData","offMapData","offConnectionStatus","dispose","destroy"],"sources":["details.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- 顶部信息栏 -->\r\n    <header class=\"top-bar\">\r\n      <div class=\"title-section\">\r\n        <h1>养殖场环境监控系统</h1>\r\n        <div class=\"weather-info\">\r\n          <span>{{ weather.date }} {{ weather.weekday }}</span>\r\n          <span>{{ weather.weather }}</span>\r\n          <span>{{ weather.tempMin }}°~{{ weather.tempMax }}°</span>\r\n          <span>{{ weather.windDir }} {{ weather.windForce }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"status-info\">\r\n        <div class=\"conn-status\">\r\n          <span class=\"dot\" :class=\"{ green: mainConn }\"></span>\r\n          <span>{{ mainConn ? '连接正常' : '连接断开' }}</span>\r\n        </div>\r\n        <span>{{ currDate }}</span>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 核心内容区 -->\r\n    <main class=\"main-content\">\r\n      <!-- 环境状态指标 -->\r\n      <section class=\"status-cards\">\r\n        <h2>环境跟踪</h2>\r\n        <div class=\"cards\">\r\n          <div class=\"card\" :class=\"{ warn: tempWarn }\">\r\n            <div>当前温度</div>\r\n            <div class=\"val\">{{ temp.toFixed(1) }}°C</div>\r\n          </div>\r\n          <div class=\"card\" :class=\"{ warn: humWarn }\">\r\n            <div>当前湿度</div>\r\n            <div class=\"val\">{{ hum.toFixed(1) }}%</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 趋势图表 -->\r\n      <section class=\"charts\">\r\n        <h2>环境趋势</h2>\r\n        <div class=\"charts-grid\">\r\n          <div class=\"chart-box\">\r\n            <div>温度历史数据</div>\r\n            <div id=\"tempChart\" class=\"chart\"></div>\r\n          </div>\r\n          <div class=\"chart-box\">\r\n            <div>湿度历史数据</div>\r\n            <div id=\"humChart\" class=\"chart\"></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 设备与状态 -->\r\n      <section class=\"device-info\">\r\n        <h2>设备与状态信息</h2>\r\n        <!-- 改为网格布局容器 -->\r\n        <div class=\"info-grid\">\r\n          <!-- 网格布局：2列3行 (可根据设备数量调整) -->\r\n          <div class=\"device-grid\">\r\n            <!-- 水位状态 -->\r\n            <div class=\"card\" :class=\"{ warn: waterAlarm }\">\r\n              <div>水位状态</div>\r\n              <span class=\"status\" :class=\"{ on: water.status === 1 }\">\r\n                {{ water.status === 1 ? '正常' : '有误' }}\r\n              </span>\r\n            </div>\r\n            \r\n            <!-- 饲料重量 -->\r\n            <div class=\"card feed-card\">\r\n              <div>饲料重量状态值</div>\r\n              <div class=\"progress-container\">\r\n                <div class=\"progress-bar\" :style=\"{ height: barHeight + 'px' }\">\r\n                  <div \r\n                    class=\"progress-fill\" \r\n                    :class=\"{ low: weightPercent < 20 }\"\r\n                    :style=\"{ \r\n                      height: weightPercent + '%',\r\n                      background: gradientBg \r\n                    }\"\r\n                  ></div>\r\n                  <div \r\n                    class=\"progress-marker\"\r\n              :style=\"{ bottom: weightPercent + '%' }\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"weight-info\">\r\n            <span>{{ weight.toFixed(1) }}g</span>\r\n            <span>{{ weightPercent }}%</span>\r\n            <span v-if=\"weightPercent < 20\" class=\"low-warning\">\r\n              饲料不足，请补充!\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 水泵设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">💧</div>\r\n        <div>水泵状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[0].status === 1 }\">\r\n          {{ devices[0].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 电机设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">🔊</div>\r\n        <div>电机状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[1].status === 1 }\">\r\n          {{ devices[1].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 灯光设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">💡</div>\r\n        <div>灯光状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[2].status === 1 }\">\r\n          {{ devices[2].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 阀门设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">🚪</div>\r\n        <div>阀门状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[3].status === 1 }\">\r\n          {{ devices[3].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 加热设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">🔥</div>\r\n        <div>加热状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[4].status === 1 }\">\r\n          {{ devices[4].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n      \r\n      <!-- 风机设备 -->\r\n      <div class=\"card device-card\">\r\n        <div class=\"icon\">💨</div>\r\n        <div>风机状态</div>\r\n        <span class=\"status\" :class=\"{ on: devices[5].status === 1 }\">\r\n          {{ devices[5].status === 1 ? '运行中' : '已关闭' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n      <!-- 地图区域 -->\r\n      <section class=\"map-section\">\r\n        <h2>位置监控</h2>\r\n        <div class=\"map-container\">\r\n          <div id=\"map\" class=\"map-view\"></div>\r\n          <div class=\"map-status\">\r\n            <span>地图后端连接: </span>\r\n            <span :class=\"{ online: mapConn }\">{{ mapConn ? '已连接' : '已断开' }}</span>\r\n            <span class=\"map-dot\" :class=\"{ green: mapConn }\"></span>\r\n          </div>\r\n          <div class=\"map-data\">\r\n            <div><span>经纬度:</span> <span>{{ lnglat || '等待数据...' }}</span></div>\r\n            <div><span>航向角:</span> <span>{{ course || '0°' }}</span></div>\r\n            <div><span>地图状态:</span> <span>{{ mapStatus }}</span></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n    <footer class=\"footer\">\r\n      <div>最后更新时间: {{ lastUpdate }}</div>\r\n      <button class=\"refresh\" @click=\"refresh\">\r\n        <i class=\"fa fa-refresh\"></i> 刷新数据\r\n      </button>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted, computed, nextTick, inject } from 'vue'\r\nimport * as echarts from 'echarts'\r\nimport markerIcon from '@/assets/imgs/icons8-圈向上-64.png'\r\n\r\n// 注入全局SSE服务\r\nconst sseService = inject('sseService')\r\n\r\n// 核心数据\r\nconst weather = ref({\r\n  date: `${new Date().getMonth() + 1}月${new Date().getDate()}日`,\r\n  weekday: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][new Date().getDay()],\r\n  weather: '晴',\r\n  tempMin: 18,\r\n  tempMax: 30,\r\n  windDir: '东风',\r\n  windForce: '3级'\r\n})\r\nconst currDate = ref(new Date().toLocaleDateString())\r\nconst temp = ref(22)\r\nconst hum = ref(50)\r\nconst tempHistory = ref([{ time: '00:00', value: 22 }, { time: '00:05', value: 22.5 }])\r\nconst humHistory = ref([{ time: '00:00', value: 50 }, { time: '00:05', value: 49.5 }])\r\nconst tempRange = { min: 18, max: 26 }\r\nconst humRange = { min: 40, max: 60 }\r\n\r\n// 设备数据\r\nconst water = ref({ status: 0, value: 0 })\r\nconst weight = ref(50)\r\nconst devices = ref([\r\n  { name: '水泵', status: 0 },\r\n  { name: '电机', status: 0 },\r\n  { name: '灯光', status: 0 },\r\n  { name: '阀门', status: 0 },\r\n  { name: '加热', status: 0 },\r\n  { name: '风机', status: 0 }\r\n])\r\n\r\n// 连接状态\r\nconst mainConn = ref(false)\r\nconst lastUpdate = ref('-')\r\nconst maxHistory = 10\r\n\r\n// 进度条相关配置\r\nconst barHeight = ref(120) // 进度条高度\r\nconst colors = ref(['#43a047', '#8bc34a', '#cddc39']) // 进度条渐变颜色\r\n\r\n// 计算属性\r\nconst weightPercent = computed(() => Math.max(0, Math.min(100, Math.round(weight.value))))\r\nconst tempWarn = computed(() => temp.value < tempRange.min || temp.value > tempRange.max)\r\nconst humWarn = computed(() => hum.value < humRange.min || hum.value > humRange.max)\r\nconst waterAlarm = computed(() => water.value.value > 8.5 || water.value.value < 2.0)\r\n// 生成渐变背景\r\nconst gradientBg = computed(() => `linear-gradient(to top, ${colors.value.join(', ')})`)\r\n\r\n// 地图相关\r\nconst lnglat = ref('')\r\nconst course = ref('')\r\nconst mapStatus = ref('地图加载中...')\r\nconst mapConn = ref(false)\r\nlet map, marker\r\n\r\n// 图表实例\r\nlet tempChart, humChart\r\n\r\n// 图表初始化与渲染\r\nconst initCharts = () => {\r\n  const tempDom = document.getElementById('tempChart')\r\n  const humDom = document.getElementById('humChart')\r\n  if (!tempDom || !humDom) return\r\n\r\n  tempChart = echarts.init(tempDom)\r\n  humChart = echarts.init(humDom)\r\n  \r\n  window.addEventListener('resize', () => {\r\n    tempChart?.resize()\r\n    humChart?.resize()\r\n  })\r\n  renderCharts()\r\n}\r\n\r\nconst renderCharts = () => {\r\n  // 温度图表配置（保持不变）\r\n  tempChart.setOption({\r\n    tooltip: { trigger: 'axis' },\r\n    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\r\n    xAxis: { \r\n      type: 'category', \r\n      data: tempHistory.value.map(i => i.time),\r\n      axisLabel: { rotate: 30 } \r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: '温度(°C)',\r\n      min: Math.min(...tempHistory.value.map(i => i.value), tempRange.min) - 2,\r\n      max: Math.max(...tempHistory.value.map(i => i.value), tempRange.max) + 2,\r\n      markLine: {\r\n        data: [\r\n          { yAxis: tempRange.min, name: '最低阈值', lineStyle: { color: 'red' } },\r\n          { yAxis: tempRange.max, name: '最高阈值', lineStyle: { color: 'red' } }\r\n        ]\r\n      }\r\n    },\r\n    series: [{\r\n      name: '温度',\r\n      type: 'line',\r\n      data: tempHistory.value.map(i => i.value),\r\n      smooth: true,\r\n      lineStyle: { color: '#e74c3c' },\r\n      itemStyle: { color: '#e74c3c' },\r\n      areaStyle: { color: new echarts.graphic.LinearGradient(0,0,0,1,[\r\n        { offset: 0, color: 'rgba(231,76,60,0.3)' },\r\n        { offset: 1, color: 'rgba(231,76,60,0)' }\r\n      ])}\r\n    }]\r\n  })\r\n\r\n  // 湿度图表配置（保持不变）\r\n  humChart.setOption({\r\n    tooltip: { trigger: 'axis' },\r\n    grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\r\n    xAxis: { type: 'category', data: humHistory.value.map(i => i.time), axisLabel: { rotate: 30 } },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: '湿度(%)',\r\n      min: Math.min(...humHistory.value.map(i => i.value), humRange.min) - 5,\r\n      max: Math.max(...humHistory.value.map(i => i.value), humRange.max) + 5,\r\n      markLine: {\r\n        data: [\r\n          { yAxis: humRange.min, name: '最低阈值', lineStyle: { color: 'blue' } },\r\n          { yAxis: humRange.max, name: '最高阈值', lineStyle: { color: 'blue' } }\r\n        ]\r\n      }\r\n    },\r\n    series: [{\r\n      name: '湿度',\r\n      type: 'line',\r\n      data: humHistory.value.map(i => i.value),\r\n      smooth: true,\r\n      lineStyle: { color: '#3498db' },\r\n      itemStyle: { color: '#3498db' },\r\n      areaStyle: { color: new echarts.graphic.LinearGradient(0,0,0,1,[\r\n        { offset: 0, color: 'rgba(52,152,219,0.3)' },\r\n        { offset: 1, color: 'rgba(52,152,219,0)' }\r\n      ])}\r\n    }]\r\n  })\r\n}\r\n\r\n// 历史数据更新\r\nconst updateHistory = (ref, val, time) => {\r\n  ref.value.push({ time, value: val })\r\n  if (ref.value.length > maxHistory) ref.value.shift()\r\n}\r\n\r\n// 地图初始化\r\nconst initMap = () => {\r\n  const loadMap = () => new Promise((res, rej) => {\r\n    if (window.AMap) return res(window.AMap)\r\n    const script = document.createElement('script')\r\n    script.src = 'https://webapi.amap.com/maps?v=1.4.15&key=你的高德Key'\r\n    script.onload = () => res(window.AMap || rej(new Error('地图加载失败')))\r\n    script.onerror = () => rej(new Error('地图脚本加载失败'))\r\n    document.head.appendChild(script)\r\n  })\r\n\r\n  loadMap().then(AMap => {\r\n    map = new AMap.Map('map', {\r\n      resizeEnable: true,\r\n      zoom: 16,\r\n      center: [116.397470, 39.908823],\r\n      viewMode: '2D'\r\n    })\r\n    \r\n    marker = new AMap.Marker({\r\n      position: [116.397470, 39.908823],\r\n      icon: new AMap.Icon({\r\n        size: new AMap.Size(32, 32),\r\n        image: markerIcon,\r\n        imageSize: new AMap.Size(64, 64),\r\n        imageOffset: new AMap.Pixel(-16, -16)\r\n      }),\r\n      anchor: 'center'\r\n    })\r\n    map.add(marker)\r\n    \r\n    map.on('complete', () => mapStatus.value = '地图已就绪')\r\n    map.on('error', () => mapStatus.value = '地图渲染错误')\r\n  }).catch(err => {\r\n    mapStatus.value = '地图加载失败'\r\n    console.error(err)\r\n  })\r\n}\r\n\r\n// 数据刷新\r\nconst refresh = () => {\r\n  sseService.closeConnections()\r\n  sseService.initConnections()\r\n  renderCharts()\r\n  lastUpdate.value = new Date().toLocaleString()\r\n}\r\n\r\n// 处理主数据更新的回调函数\r\nconst handleMainData = (data) => {\r\n  try {\r\n    temp.value = data.tem || data.T || temp.value\r\n    hum.value = data.hum || data.H || hum.value\r\n    \r\n    water.value = {\r\n      status: data.waterStatus || 0,\r\n      value: data.Wal || data.waterlevel || 0\r\n    }\r\n    \r\n    weight.value = Math.max(0, Math.min(100, parseFloat(data.weight) || 0))\r\n\r\n    // 更新设备状态\r\n    devices.value.find(d => d.name === '水泵').status = data.pump || 0\r\n    devices.value.find(d => d.name === '电机').status = data.motor || 0\r\n    devices.value.find(d => d.name === '灯光').status = data.light || 0\r\n    devices.value.find(d => d.name === '阀门').status = data.door || 0\r\n    devices.value.find(d => d.name === '加热').status = data.heat || 0\r\n    devices.value.find(d => d.name === '风机').status = data.fan || 0\r\n    \r\n    // 更新历史数据\r\n    const timeStr = new Date().toLocaleTimeString()\r\n    updateHistory(tempHistory, temp.value, timeStr)\r\n    updateHistory(humHistory, hum.value, timeStr)\r\n    \r\n    lastUpdate.value = new Date().toLocaleString()\r\n    currDate.value = new Date().toLocaleDateString()\r\n    renderCharts()\r\n    mainConn.value = true\r\n  } catch (e) {\r\n    mainConn.value = false\r\n    console.error('处理主数据失败:', e)\r\n  }\r\n}\r\n\r\n// 处理地图数据更新的回调函数\r\nconst handleMapData = (data) => {\r\n  try {\r\n    if (data.lng !== undefined && data.lat !== undefined) {\r\n      const lng = parseFloat(data.lng), lat = parseFloat(data.lat)\r\n      if (!isNaN(lng) && !isNaN(lat) && lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90) {\r\n        lnglat.value = `${lng.toFixed(6)},${lat.toFixed(6)}`\r\n        marker?.setPosition([lng + 0.01, lat - 0.001])\r\n        map?.panTo([lng + 0.01, lat - 0.001], { duration: 300 })\r\n      }\r\n    }\r\n    if (data.cogt !== undefined) {\r\n      const angle = parseFloat(data.cogt)\r\n      if (!isNaN(angle)) {\r\n        course.value = `${angle.toFixed(1)}°`\r\n        marker?.setRotation(((angle % 360) + 360) % 360)\r\n      }\r\n    }\r\n    mapConn.value = true\r\n  } catch (e) {\r\n    mapConn.value = false\r\n    console.error('处理地图数据失败:', e)\r\n  }\r\n}\r\n\r\n// 处理连接状态变化\r\nconst handleConnectionStatus = (status) => {\r\n  mainConn.value = status\r\n  mapConn.value = status\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  nextTick(() => {\r\n    initCharts()\r\n    initMap()\r\n    \r\n    // 订阅SSE数据更新\r\n    sseService.onMainData(handleMainData)\r\n    sseService.onMapData(handleMapData)\r\n    sseService.onConnectionStatus(handleConnectionStatus)\r\n    \r\n    // 初始刷新一次数据\r\n    refresh()\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // 取消订阅\r\n  sseService.offMainData(handleMainData)\r\n  sseService.offMapData(handleMapData)\r\n  sseService.offConnectionStatus(handleConnectionStatus)\r\n  \r\n  // 清理图表和地图\r\n  tempChart?.dispose()\r\n  humChart?.dispose()\r\n  map?.destroy()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n* { margin: 0; padding: 0; box-sizing: border-box; }\r\n.dashboard { font-family: 'Microsoft YaHei', sans-serif; display: flex; flex-direction: column; background: #f5f7fa; min-height: 100vh; }\r\n\r\n/* 顶部栏 */\r\n.top-bar { display: flex; justify-content: space-between; align-items: center; padding: 1rem 2rem; background: #2c3e50; color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); flex-wrap: wrap; gap: 1rem; }\r\n.weather-info { display: flex; gap: 1.5rem; font-size: 0.9rem; color: #e0e0e0; }\r\n.conn-status { display: flex; align-items: center; gap: 0.5rem; }\r\n.dot { display: inline-block; width: 10px; height: 10px; border-radius: 50%; background: #e74c3c; }\r\n.dot.green { background: #27ae60; }\r\n.currDate { font-size: 0.9rem; }\r\n\r\n/* 主内容区 */\r\n.main-content { flex: 1; padding: 1.5rem 2rem; display: flex; flex-direction: column; gap: 2rem; overflow-y: auto; }\r\nh2 { font-size: 1.2rem; color: #2c3e50; margin-bottom: 1rem; padding-bottom: 0.5rem; border-bottom: 1px solid #e0e0e0; }\r\n\r\n/* 状态卡片 */\r\n.status-cards .cards { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; height: 140px; }\r\n.card { background: #fff; border-radius: 6px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 1rem; display: flex; flex-direction: column; justify-content: center; gap: 0.5rem; }\r\n.card.warn { border-left: 4px solid #e74c3c; }\r\n.card .val { font-size: 1.8rem; font-weight: bold; color: #2c3e50; }\r\n\r\n/* 图表区域 */\r\n.charts .charts-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1.5rem; height: 400px; }\r\n.chart-box .chart { width: 100%; height: 100%; min-height: 250px; }\r\n\r\n\r\n.device-info .info-grid {\r\n  height: auto; /* 自动适应内容高度 */\r\n  padding: 1rem;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.device-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr)); /* 自动填充列，最小宽度240px */\r\n  gap: 1.2rem; /* 网格间距 */\r\n}\r\n\r\n/* 设备卡片通用样式 */\r\n.device-grid .card {\r\n  height: 100%;\r\n  min-height: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.device-grid .card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n}\r\n\r\n/* 设备图标样式 */\r\n.device-card .icon {\r\n  font-size: 1.8rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n/* 饲料卡片特殊调整 */\r\n.feed-card {\r\n  grid-column: span 2; /* 饲料卡片占2列宽度 */\r\n  min-height: 160px;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .device-grid {\r\n    grid-template-columns: 1fr 1fr; /* 小屏幕显示2列 */\r\n  }\r\n  \r\n  .feed-card {\r\n    grid-column: span 2; /* 小屏幕饲料卡片仍占2列 */\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .device-grid {\r\n    grid-template-columns: 1fr; /* 超小屏幕显示1列 */\r\n  }\r\n  \r\n  .feed-card {\r\n    grid-column: span 1; /* 超小屏幕饲料卡片占1列 */\r\n  }\r\n}\r\n\r\n/* 整合后的饲料重量进度条样式 */\r\n.feed-card .progress-container { display: flex; align-items: center; gap: 1rem; justify-content: center; flex: 1; }\r\n\r\n/* 进度条主体 */\r\n.progress-bar {\r\n  width: 60px;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  background-color: #f5f5f5;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1) inset;\r\n}\r\n\r\n/* 进度填充样式 */\r\n.progress-fill {\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  transition: height 0.8s ease;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* 进度标记线 */\r\n.progress-marker {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: #333;\r\n  transform: translateY(50%);\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* 低电量样式 */\r\n.progress-fill.low { \r\n  background: linear-gradient(to top, #e74c3c, #ff5252) !important;\r\n  animation: pulse 1.5s infinite; \r\n}\r\n\r\n/* 重量信息显示 */\r\n.weight-info { \r\n  display: flex; \r\n  flex-direction: column; \r\n  gap: 0.5rem; \r\n  align-items: center; \r\n}\r\n.weight-info span {\r\n  font-weight: 500;\r\n}\r\n.low-warning {\r\n  color: #e74c3c;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  animation: shake 1s infinite;\r\n}\r\n\r\n/* 设备列表 */\r\n.device-list { display: flex; flex-direction: column; gap: 0.8rem; }\r\n.device-item { padding: 0.6rem 0.8rem; border-radius: 4px; background: #fafafa; font-size: 0.9rem; display: flex; align-items: center; gap: 0.8rem; }\r\n.icon { font-size: 1.1rem; }\r\n.status { font-weight: 500; }\r\n.status.on { color: #27ae60; }\r\n\r\n/* 地图区域 */\r\n.map-container { width: 100%; height: 600px; position: relative; border-radius: 6px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); overflow: hidden; }\r\n.map-view { width: 100%; height: 100%; }\r\n.map-status { position: absolute; top: 15px; right: 15px; background: rgba(255,255,255,0.9); padding: 0.5rem 1rem; border-radius: 4px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 0.85rem; }\r\n.map-dot { display: inline-block; width: 8px; height: 8px; border-radius: 50%; background: #e74c3c; margin-left: 5px; }\r\n.map-dot.green { background: #27ae60; }\r\n.map-data { position: absolute; bottom: 15px; left: 15px; background: rgba(255,255,255,0.9); padding: 0.8rem; border-radius: 6px; box-shadow: 0 2px 8px rgba(0,0,0,0.15); font-size: 0.9rem; display: flex; gap: 1.5rem; }\r\n.map-data > div { display: flex; gap: 0.5rem; }\r\n\r\n/* 底部区域 */\r\n.footer { height: 50px; display: flex; justify-content: space-between; align-items: center; padding: 0 2rem; background: #2c3e50; color: #fff; font-size: 0.9rem; }\r\n.refresh { background: #3498db; color: #fff; border: none; border-radius: 4px; padding: 0.4rem 0.8rem; display: flex; align-items: center; gap: 0.5rem; cursor: pointer; }\r\n.refresh:hover { background: #2980b9; }\r\n\r\n/* 响应式 */\r\n@media (max-width: 768px) {\r\n  .charts-grid { grid-template-columns: 1fr; height: auto; gap: 1rem; }\r\n  .chart-box { height: 400px; }\r\n  .info-grid { flex-direction: column; height: auto; gap: 1rem; }\r\n  .status-group, .device-list { height: auto; min-height: 300px; }\r\n  .map-container { height: 400px; }\r\n}\r\n\r\n/* 动画效果 */\r\n@keyframes pulse { \r\n  0% { opacity: 1; } \r\n  50% { opacity: 0.6; } \r\n  100% { opacity: 1; } \r\n}\r\n\r\n@keyframes shake {\r\n  0%, 100% { transform: translateX(0); }\r\n  25% { transform: translateX(-3px); }\r\n  75% { transform: translateX(3px); }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}