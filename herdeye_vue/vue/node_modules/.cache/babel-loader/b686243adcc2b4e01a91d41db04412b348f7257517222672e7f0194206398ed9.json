{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nimport markerIcon from '@/assets/imgs/icons8-圈向上-64.png';\nexport default {\n  name: 'FarmMonitor',\n  // 避免使用HTML保留标签作为组件名\n  data() {\n    return {\n      // 核心数据\n      weather: {\n        date: `${new Date().getMonth() + 1}月${new Date().getDate()}日`,\n        weekday: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][new Date().getDay()],\n        weather: '晴',\n        tempMin: 18,\n        tempMax: 30,\n        windDir: '东风',\n        windForce: '3级'\n      },\n      currDate: new Date().toLocaleDateString(),\n      temp: 22,\n      hum: 50,\n      tempHistory: [{\n        time: '00:00',\n        value: 22\n      }, {\n        time: '00:05',\n        value: 22.5\n      }],\n      humHistory: [{\n        time: '00:00',\n        value: 50\n      }, {\n        time: '00:05',\n        value: 49.5\n      }],\n      tempRange: {\n        min: 18,\n        max: 26\n      },\n      humRange: {\n        min: 40,\n        max: 60\n      },\n      // 设备数据\n      water: {\n        status: 0,\n        value: 0\n      },\n      weight: 50,\n      devices: [{\n        name: '水泵',\n        status: 0\n      }, {\n        name: '电机',\n        status: 0\n      }, {\n        name: '灯光',\n        status: 0\n      }, {\n        name: '阀门',\n        status: 0\n      }, {\n        name: '加热',\n        status: 0\n      }, {\n        name: '风机',\n        status: 0\n      }],\n      // 连接状态\n      mainConn: false,\n      lastUpdate: '-',\n      maxHistory: 10,\n      // 进度条相关配置\n      barHeight: 120,\n      // 进度条高度\n      colors: ['#43a047', '#8bc34a', '#cddc39'],\n      // 进度条渐变颜色\n\n      // 地图相关\n      lnglat: '',\n      course: '',\n      mapStatus: '地图加载中...',\n      mapConn: false,\n      map: null,\n      marker: null,\n      // 图表实例\n      tempChart: null,\n      humChart: null\n    };\n  },\n  computed: {\n    // 计算属性（Vue 2 中使用 function 语法）\n    weightPercent() {\n      return Math.max(0, Math.min(100, Math.round(this.weight)));\n    },\n    tempWarn() {\n      return this.temp < this.tempRange.min || this.temp > this.tempRange.max;\n    },\n    humWarn() {\n      return this.hum < this.humRange.min || this.hum > this.humRange.max;\n    },\n    waterAlarm() {\n      return this.water.value > 8.5 || this.water.value < 2.0;\n    },\n    gradientBg() {\n      return `linear-gradient(to top, ${this.colors.join(', ')})`;\n    }\n  },\n  methods: {\n    // 图表初始化与渲染\n    initCharts() {\n      const tempDom = document.getElementById('tempChart');\n      const humDom = document.getElementById('humChart');\n      if (!tempDom || !humDom) return;\n      this.tempChart = echarts.init(tempDom);\n      this.humChart = echarts.init(humDom);\n      window.addEventListener('resize', () => {\n        this.tempChart?.resize();\n        this.humChart?.resize();\n      });\n      this.renderCharts();\n    },\n    renderCharts() {\n      // 温度图表配置\n      this.tempChart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: this.tempHistory.map(i => i.time),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '温度(°C)',\n          min: Math.min(...this.tempHistory.map(i => i.value), this.tempRange.min) - 2,\n          max: Math.max(...this.tempHistory.map(i => i.value), this.tempRange.max) + 2,\n          markLine: {\n            data: [{\n              yAxis: this.tempRange.min,\n              name: '最低阈值',\n              lineStyle: {\n                color: 'red'\n              }\n            }, {\n              yAxis: this.tempRange.max,\n              name: '最高阈值',\n              lineStyle: {\n                color: 'red'\n              }\n            }]\n          }\n        },\n        series: [{\n          name: '温度',\n          type: 'line',\n          data: this.tempHistory.map(i => i.value),\n          smooth: true,\n          lineStyle: {\n            color: '#e74c3c'\n          },\n          itemStyle: {\n            color: '#e74c3c'\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(231,76,60,0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(231,76,60,0)'\n            }])\n          }\n        }]\n      });\n\n      // 湿度图表配置\n      this.humChart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: this.humHistory.map(i => i.time),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '湿度(%)',\n          min: Math.min(...this.humHistory.map(i => i.value), this.humRange.min) - 5,\n          max: Math.max(...this.humHistory.map(i => i.value), this.humRange.max) + 5,\n          markLine: {\n            data: [{\n              yAxis: this.humRange.min,\n              name: '最低阈值',\n              lineStyle: {\n                color: 'blue'\n              }\n            }, {\n              yAxis: this.humRange.max,\n              name: '最高阈值',\n              lineStyle: {\n                color: 'blue'\n              }\n            }]\n          }\n        },\n        series: [{\n          name: '湿度',\n          type: 'line',\n          data: this.humHistory.map(i => i.value),\n          smooth: true,\n          lineStyle: {\n            color: '#3498db'\n          },\n          itemStyle: {\n            color: '#3498db'\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(52,152,219,0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(52,152,219,0)'\n            }])\n          }\n        }]\n      });\n    },\n    // 历史数据更新\n    updateHistory(ref, val, time) {\n      ref.push({\n        time,\n        value: val\n      });\n      if (ref.length > this.maxHistory) ref.shift();\n    },\n    // 地图初始化\n    initMap() {\n      const loadMap = () => new Promise((res, rej) => {\n        if (window.AMap) return res(window.AMap);\n        const script = document.createElement('script');\n        script.src = 'https://webapi.amap.com/maps?v=1.4.15&key=你的高德Key'; // 替换为你的高德Key\n        script.onload = () => res(window.AMap || rej(new Error('地图加载失败')));\n        script.onerror = () => rej(new Error('地图脚本加载失败'));\n        document.head.appendChild(script);\n      });\n      loadMap().then(AMap => {\n        this.map = new AMap.Map('map', {\n          resizeEnable: true,\n          zoom: 16,\n          center: [116.397470, 39.908823],\n          viewMode: '2D'\n        });\n        this.marker = new AMap.Marker({\n          position: [116.397470, 39.908823],\n          icon: new AMap.Icon({\n            size: new AMap.Size(32, 32),\n            image: markerIcon,\n            imageSize: new AMap.Size(64, 64),\n            imageOffset: new AMap.Pixel(-16, -16)\n          }),\n          anchor: 'center'\n        });\n        this.map.add(this.marker);\n        this.map.on('complete', () => this.mapStatus = '地图已就绪');\n        this.map.on('error', () => this.mapStatus = '地图渲染错误');\n      }).catch(err => {\n        this.mapStatus = '地图加载失败';\n        console.error(err);\n      });\n    },\n    // 数据刷新\n    refresh() {\n      // 使用 Vue 2 全局挂载的服务：this.$sseService\n      if (this.$sseService) {\n        this.$sseService.closeConnections();\n        this.$sseService.initConnections();\n        this.renderCharts();\n        this.lastUpdate = new Date().toLocaleString();\n      }\n    },\n    // 处理主数据更新的回调函数\n    handleMainData(data) {\n      try {\n        this.temp = data.tem || data.T || this.temp;\n        this.hum = data.hum || data.H || this.hum;\n        this.water = {\n          status: data.waterStatus || 0,\n          value: data.Wal || data.waterlevel || 0\n        };\n        this.weight = Math.max(0, Math.min(100, parseFloat(data.weight) || 0));\n\n        // 更新设备状态\n        this.devices.find(d => d.name === '水泵').status = data.pump || 0;\n        this.devices.find(d => d.name === '电机').status = data.motor || 0;\n        this.devices.find(d => d.name === '灯光').status = data.light || 0;\n        this.devices.find(d => d.name === '阀门').status = data.door || 0;\n        this.devices.find(d => d.name === '加热').status = data.heat || 0;\n        this.devices.find(d => d.name === '风机').status = data.fan || 0;\n\n        // 更新历史数据\n        const timeStr = new Date().toLocaleTimeString();\n        this.updateHistory(this.tempHistory, this.temp, timeStr);\n        this.updateHistory(this.humHistory, this.hum, timeStr);\n        this.lastUpdate = new Date().toLocaleString();\n        this.currDate = new Date().toLocaleDateString();\n        this.renderCharts();\n        this.mainConn = true;\n      } catch (e) {\n        this.mainConn = false;\n        console.error('处理主数据失败:', e);\n      }\n    },\n    // 处理地图数据更新的回调函数\n    handleMapData(data) {\n      try {\n        if (data.lng !== undefined && data.lat !== undefined) {\n          const lng = parseFloat(data.lng),\n            lat = parseFloat(data.lat);\n          if (!isNaN(lng) && !isNaN(lat) && lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90) {\n            this.lnglat = `${lng.toFixed(6)},${lat.toFixed(6)}`;\n            this.marker?.setPosition([lng + 0.01, lat - 0.001]);\n            this.map?.panTo([lng + 0.01, lat - 0.001], {\n              duration: 300\n            });\n          }\n        }\n        if (data.cogt !== undefined) {\n          const angle = parseFloat(data.cogt);\n          if (!isNaN(angle)) {\n            this.course = `${angle.toFixed(1)}°`;\n            this.marker?.setRotation((angle % 360 + 360) % 360);\n          }\n        }\n        this.mapConn = true;\n      } catch (e) {\n        this.mapConn = false;\n        console.error('处理地图数据失败:', e);\n      }\n    },\n    // 处理连接状态变化\n    handleConnectionStatus(status) {\n      this.mainConn = status;\n      this.mapConn = status;\n    }\n  },\n  mounted() {\n    // Vue 2 中使用 $nextTick\n    this.$nextTick(() => {\n      this.initCharts();\n      this.initMap();\n\n      // 订阅 SSE 数据更新（使用全局挂载的 this.$sseService）\n      if (this.$sseService) {\n        this.$sseService.onMainData(this.handleMainData);\n        this.$sseService.onMapData(this.handleMapData);\n        this.$sseService.onConnectionStatus(this.handleConnectionStatus);\n      }\n\n      // 初始刷新一次数据\n      this.refresh();\n    });\n  },\n  beforeDestroy() {\n    // 取消订阅，避免内存泄漏\n    if (this.$sseService) {\n      this.$sseService.offMainData(this.handleMainData);\n      this.$sseService.offMapData(this.handleMapData);\n      this.$sseService.offConnectionStatus(this.handleConnectionStatus);\n    }\n\n    // 清理图表和地图\n    if (this.tempChart) this.tempChart.dispose();\n    if (this.humChart) this.humChart.dispose();\n    if (this.map) this.map.destroy();\n  }\n};","map":{"version":3,"names":["echarts","markerIcon","name","data","weather","date","Date","getMonth","getDate","weekday","getDay","tempMin","tempMax","windDir","windForce","currDate","toLocaleDateString","temp","hum","tempHistory","time","value","humHistory","tempRange","min","max","humRange","water","status","weight","devices","mainConn","lastUpdate","maxHistory","barHeight","colors","lnglat","course","mapStatus","mapConn","map","marker","tempChart","humChart","computed","weightPercent","Math","round","tempWarn","humWarn","waterAlarm","gradientBg","join","methods","initCharts","tempDom","document","getElementById","humDom","init","window","addEventListener","resize","renderCharts","setOption","tooltip","trigger","grid","left","right","bottom","containLabel","xAxis","type","i","axisLabel","rotate","yAxis","markLine","lineStyle","color","series","smooth","itemStyle","areaStyle","graphic","LinearGradient","offset","updateHistory","ref","val","push","length","shift","initMap","loadMap","Promise","res","rej","AMap","script","createElement","src","onload","Error","onerror","head","appendChild","then","Map","resizeEnable","zoom","center","viewMode","Marker","position","icon","Icon","size","Size","image","imageSize","imageOffset","Pixel","anchor","add","on","catch","err","console","error","refresh","$sseService","closeConnections","initConnections","toLocaleString","handleMainData","tem","T","H","waterStatus","Wal","waterlevel","parseFloat","find","d","pump","motor","light","door","heat","fan","timeStr","toLocaleTimeString","e","handleMapData","lng","undefined","lat","isNaN","toFixed","setPosition","panTo","duration","cogt","angle","setRotation","handleConnectionStatus","mounted","$nextTick","onMainData","onMapData","onConnectionStatus","beforeDestroy","offMainData","offMapData","offConnectionStatus","dispose","destroy"],"sources":["src/views/manager/details.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- 模板内容保持不变 -->\r\n    <!-- 顶部信息栏 -->\r\n    <header class=\"top-bar\">\r\n      <div class=\"title-section\">\r\n        <h1>养殖场环境监控系统</h1>\r\n        <div class=\"weather-info\">\r\n          <span>{{ weather.date }} {{ weather.weekday }}</span>\r\n          <span>{{ weather.weather }}</span>\r\n          <span>{{ weather.tempMin }}°~{{ weather.tempMax }}°</span>\r\n          <span>{{ weather.windDir }} {{ weather.windForce }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"status-info\">\r\n        <div class=\"conn-status\">\r\n          <span class=\"dot\" :class=\"{ green: mainConn }\"></span>\r\n          <span>{{ mainConn ? '连接正常' : '连接断开' }}</span>\r\n        </div>\r\n        <span>{{ currDate }}</span>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 核心内容区 -->\r\n    <main class=\"main-content\">\r\n      <!-- 环境状态指标 -->\r\n      <section class=\"status-cards\">\r\n        <h2>环境跟踪</h2>\r\n        <div class=\"cards\">\r\n          <div class=\"card\" :class=\"{ warn: tempWarn }\">\r\n            <div>当前温度</div>\r\n            <div class=\"val\">{{ temp.toFixed(1) }}°C</div>\r\n          </div>\r\n          <div class=\"card\" :class=\"{ warn: humWarn }\">\r\n            <div>当前湿度</div>\r\n            <div class=\"val\">{{ hum.toFixed(1) }}%</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 趋势图表 -->\r\n      <section class=\"charts\">\r\n        <h2>环境趋势</h2>\r\n        <div class=\"charts-grid\">\r\n          <div class=\"chart-box\">\r\n            <div>温度历史数据</div>\r\n            <div id=\"tempChart\" class=\"chart\"></div>\r\n          </div>\r\n          <div class=\"chart-box\">\r\n            <div>湿度历史数据</div>\r\n            <div id=\"humChart\" class=\"chart\"></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 设备与状态 -->\r\n      <section class=\"device-info\">\r\n        <h2>设备与状态信息</h2>\r\n        <div class=\"info-grid\">\r\n          <div class=\"device-grid\">\r\n            <!-- 水位状态 -->\r\n            <div class=\"card\" :class=\"{ warn: waterAlarm }\">\r\n              <div>水位状态</div>\r\n              <span class=\"status\" :class=\"{ on: water.status === 1 }\">\r\n                {{ water.status === 1 ? '正常' : '有误' }}\r\n              </span>\r\n            </div>\r\n            \r\n            <!-- 饲料重量 -->\r\n            <div class=\"card feed-card\">\r\n              <div>饲料重量状态值</div>\r\n              <div class=\"progress-container\">\r\n                <div class=\"progress-bar\" :style=\"{ height: barHeight + 'px' }\">\r\n                  <div \r\n                    class=\"progress-fill\" \r\n                    :class=\"{ low: weightPercent < 20 }\"\r\n                    :style=\"{ \r\n                      height: weightPercent + '%',\r\n                      background: gradientBg \r\n                    }\"\r\n                  ></div>\r\n                  <div \r\n                    class=\"progress-marker\"\r\n                    :style=\"{ bottom: weightPercent + '%' }\"\r\n                  ></div>\r\n                </div>\r\n                <div class=\"weight-info\">\r\n                  <span>{{ weight.toFixed(1) }}g</span>\r\n                  <span>{{ weightPercent }}%</span>\r\n                  <span v-if=\"weightPercent < 20\" class=\"low-warning\">\r\n                    饲料不足，请补充!\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 水泵设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">💧</div>\r\n            <div>水泵状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[0].status === 1 }\">\r\n              {{ devices[0].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n          \r\n          <!-- 电机设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">🔊</div>\r\n            <div>电机状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[1].status === 1 }\">\r\n              {{ devices[1].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n          \r\n          <!-- 灯光设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">💡</div>\r\n            <div>灯光状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[2].status === 1 }\">\r\n              {{ devices[2].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n          \r\n          <!-- 阀门设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">🚪</div>\r\n            <div>阀门状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[3].status === 1 }\">\r\n              {{ devices[3].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n          \r\n          <!-- 加热设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">🔥</div>\r\n            <div>加热状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[4].status === 1 }\">\r\n              {{ devices[4].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n          \r\n          <!-- 风机设备 -->\r\n          <div class=\"card device-card\">\r\n            <div class=\"icon\">💨</div>\r\n            <div>风机状态</div>\r\n            <span class=\"status\" :class=\"{ on: devices[5].status === 1 }\">\r\n              {{ devices[5].status === 1 ? '运行中' : '已关闭' }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 地图区域 -->\r\n      <section class=\"map-section\">\r\n        <h2>位置监控</h2>\r\n        <div class=\"map-container\">\r\n          <div id=\"map\" class=\"map-view\"></div>\r\n          <div class=\"map-status\">\r\n            <span>地图后端连接: </span>\r\n            <span :class=\"{ online: mapConn }\">{{ mapConn ? '已连接' : '已断开' }}</span>\r\n            <span class=\"map-dot\" :class=\"{ green: mapConn }\"></span>\r\n          </div>\r\n          <div class=\"map-data\">\r\n            <div><span>经纬度:</span> <span>{{ lnglat || '等待数据...' }}</span></div>\r\n            <div><span>航向角:</span> <span>{{ course || '0°' }}</span></div>\r\n            <div><span>地图状态:</span> <span>{{ mapStatus }}</span></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n    <footer class=\"footer\">\r\n      <div>最后更新时间: {{ lastUpdate }}</div>\r\n      <button class=\"refresh\" @click=\"refresh\">\r\n        <i class=\"fa fa-refresh\"></i> 刷新数据\r\n      </button>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport markerIcon from '@/assets/imgs/icons8-圈向上-64.png'\r\n\r\nexport default {\r\n  name: 'FarmMonitor', // 避免使用HTML保留标签作为组件名\r\n  data() {\r\n    return {\r\n      // 核心数据\r\n      weather: {\r\n        date: `${new Date().getMonth() + 1}月${new Date().getDate()}日`,\r\n        weekday: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][new Date().getDay()],\r\n        weather: '晴',\r\n        tempMin: 18,\r\n        tempMax: 30,\r\n        windDir: '东风',\r\n        windForce: '3级'\r\n      },\r\n      currDate: new Date().toLocaleDateString(),\r\n      temp: 22,\r\n      hum: 50,\r\n      tempHistory: [{ time: '00:00', value: 22 }, { time: '00:05', value: 22.5 }],\r\n      humHistory: [{ time: '00:00', value: 50 }, { time: '00:05', value: 49.5 }],\r\n      tempRange: { min: 18, max: 26 },\r\n      humRange: { min: 40, max: 60 },\r\n\r\n      // 设备数据\r\n      water: { status: 0, value: 0 },\r\n      weight: 50,\r\n      devices: [\r\n        { name: '水泵', status: 0 },\r\n        { name: '电机', status: 0 },\r\n        { name: '灯光', status: 0 },\r\n        { name: '阀门', status: 0 },\r\n        { name: '加热', status: 0 },\r\n        { name: '风机', status: 0 }\r\n      ],\r\n\r\n      // 连接状态\r\n      mainConn: false,\r\n      lastUpdate: '-',\r\n      maxHistory: 10,\r\n\r\n      // 进度条相关配置\r\n      barHeight: 120, // 进度条高度\r\n      colors: ['#43a047', '#8bc34a', '#cddc39'], // 进度条渐变颜色\r\n\r\n      // 地图相关\r\n      lnglat: '',\r\n      course: '',\r\n      mapStatus: '地图加载中...',\r\n      mapConn: false,\r\n      map: null,\r\n      marker: null,\r\n\r\n      // 图表实例\r\n      tempChart: null,\r\n      humChart: null\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算属性（Vue 2 中使用 function 语法）\r\n    weightPercent() {\r\n      return Math.max(0, Math.min(100, Math.round(this.weight)))\r\n    },\r\n    tempWarn() {\r\n      return this.temp < this.tempRange.min || this.temp > this.tempRange.max\r\n    },\r\n    humWarn() {\r\n      return this.hum < this.humRange.min || this.hum > this.humRange.max\r\n    },\r\n    waterAlarm() {\r\n      return this.water.value > 8.5 || this.water.value < 2.0\r\n    },\r\n    gradientBg() {\r\n      return `linear-gradient(to top, ${this.colors.join(', ')})`\r\n    }\r\n  },\r\n  methods: {\r\n    // 图表初始化与渲染\r\n    initCharts() {\r\n      const tempDom = document.getElementById('tempChart')\r\n      const humDom = document.getElementById('humChart')\r\n      if (!tempDom || !humDom) return\r\n\r\n      this.tempChart = echarts.init(tempDom)\r\n      this.humChart = echarts.init(humDom)\r\n      \r\n      window.addEventListener('resize', () => {\r\n        this.tempChart?.resize()\r\n        this.humChart?.resize()\r\n      })\r\n      this.renderCharts()\r\n    },\r\n    renderCharts() {\r\n      // 温度图表配置\r\n      this.tempChart.setOption({\r\n        tooltip: { trigger: 'axis' },\r\n        grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\r\n        xAxis: { \r\n          type: 'category', \r\n          data: this.tempHistory.map(i => i.time),\r\n          axisLabel: { rotate: 30 } \r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '温度(°C)',\r\n          min: Math.min(...this.tempHistory.map(i => i.value), this.tempRange.min) - 2,\r\n          max: Math.max(...this.tempHistory.map(i => i.value), this.tempRange.max) + 2,\r\n          markLine: {\r\n            data: [\r\n              { yAxis: this.tempRange.min, name: '最低阈值', lineStyle: { color: 'red' } },\r\n              { yAxis: this.tempRange.max, name: '最高阈值', lineStyle: { color: 'red' } }\r\n            ]\r\n          }\r\n        },\r\n        series: [{\r\n          name: '温度',\r\n          type: 'line',\r\n          data: this.tempHistory.map(i => i.value),\r\n          smooth: true,\r\n          lineStyle: { color: '#e74c3c' },\r\n          itemStyle: { color: '#e74c3c' },\r\n          areaStyle: { color: new echarts.graphic.LinearGradient(0,0,0,1,[\r\n            { offset: 0, color: 'rgba(231,76,60,0.3)' },\r\n            { offset: 1, color: 'rgba(231,76,60,0)' }\r\n          ])}\r\n        }]\r\n      })\r\n\r\n      // 湿度图表配置\r\n      this.humChart.setOption({\r\n        tooltip: { trigger: 'axis' },\r\n        grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\r\n        xAxis: { type: 'category', data: this.humHistory.map(i => i.time), axisLabel: { rotate: 30 } },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '湿度(%)',\r\n          min: Math.min(...this.humHistory.map(i => i.value), this.humRange.min) - 5,\r\n          max: Math.max(...this.humHistory.map(i => i.value), this.humRange.max) + 5,\r\n          markLine: {\r\n            data: [\r\n              { yAxis: this.humRange.min, name: '最低阈值', lineStyle: { color: 'blue' } },\r\n              { yAxis: this.humRange.max, name: '最高阈值', lineStyle: { color: 'blue' } }\r\n            ]\r\n          }\r\n        },\r\n        series: [{\r\n          name: '湿度',\r\n          type: 'line',\r\n          data: this.humHistory.map(i => i.value),\r\n          smooth: true,\r\n          lineStyle: { color: '#3498db' },\r\n          itemStyle: { color: '#3498db' },\r\n          areaStyle: { color: new echarts.graphic.LinearGradient(0,0,0,1,[\r\n            { offset: 0, color: 'rgba(52,152,219,0.3)' },\r\n            { offset: 1, color: 'rgba(52,152,219,0)' }\r\n          ])}\r\n        }]\r\n      })\r\n    },\r\n\r\n    // 历史数据更新\r\n    updateHistory(ref, val, time) {\r\n      ref.push({ time, value: val })\r\n      if (ref.length > this.maxHistory) ref.shift()\r\n    },\r\n\r\n    // 地图初始化\r\n    initMap() {\r\n      const loadMap = () => new Promise((res, rej) => {\r\n        if (window.AMap) return res(window.AMap)\r\n        const script = document.createElement('script')\r\n        script.src = 'https://webapi.amap.com/maps?v=1.4.15&key=你的高德Key' // 替换为你的高德Key\r\n        script.onload = () => res(window.AMap || rej(new Error('地图加载失败')))\r\n        script.onerror = () => rej(new Error('地图脚本加载失败'))\r\n        document.head.appendChild(script)\r\n      })\r\n\r\n      loadMap().then(AMap => {\r\n        this.map = new AMap.Map('map', {\r\n          resizeEnable: true,\r\n          zoom: 16,\r\n          center: [116.397470, 39.908823],\r\n          viewMode: '2D'\r\n        })\r\n        \r\n        this.marker = new AMap.Marker({\r\n          position: [116.397470, 39.908823],\r\n          icon: new AMap.Icon({\r\n            size: new AMap.Size(32, 32),\r\n            image: markerIcon,\r\n            imageSize: new AMap.Size(64, 64),\r\n            imageOffset: new AMap.Pixel(-16, -16)\r\n          }),\r\n          anchor: 'center'\r\n        })\r\n        this.map.add(this.marker)\r\n        \r\n        this.map.on('complete', () => this.mapStatus = '地图已就绪')\r\n        this.map.on('error', () => this.mapStatus = '地图渲染错误')\r\n      }).catch(err => {\r\n        this.mapStatus = '地图加载失败'\r\n        console.error(err)\r\n      })\r\n    },\r\n\r\n    // 数据刷新\r\n    refresh() {\r\n      // 使用 Vue 2 全局挂载的服务：this.$sseService\r\n      if (this.$sseService) {\r\n        this.$sseService.closeConnections()\r\n        this.$sseService.initConnections()\r\n        this.renderCharts()\r\n        this.lastUpdate = new Date().toLocaleString()\r\n      }\r\n    },\r\n\r\n    // 处理主数据更新的回调函数\r\n    handleMainData(data) {\r\n      try {\r\n        this.temp = data.tem || data.T || this.temp\r\n        this.hum = data.hum || data.H || this.hum\r\n        \r\n        this.water = {\r\n          status: data.waterStatus || 0,\r\n          value: data.Wal || data.waterlevel || 0\r\n        }\r\n        \r\n        this.weight = Math.max(0, Math.min(100, parseFloat(data.weight) || 0))\r\n\r\n        // 更新设备状态\r\n        this.devices.find(d => d.name === '水泵').status = data.pump || 0\r\n        this.devices.find(d => d.name === '电机').status = data.motor || 0\r\n        this.devices.find(d => d.name === '灯光').status = data.light || 0\r\n        this.devices.find(d => d.name === '阀门').status = data.door || 0\r\n        this.devices.find(d => d.name === '加热').status = data.heat || 0\r\n        this.devices.find(d => d.name === '风机').status = data.fan || 0\r\n        \r\n        // 更新历史数据\r\n        const timeStr = new Date().toLocaleTimeString()\r\n        this.updateHistory(this.tempHistory, this.temp, timeStr)\r\n        this.updateHistory(this.humHistory, this.hum, timeStr)\r\n        \r\n        this.lastUpdate = new Date().toLocaleString()\r\n        this.currDate = new Date().toLocaleDateString()\r\n        this.renderCharts()\r\n        this.mainConn = true\r\n      } catch (e) {\r\n        this.mainConn = false\r\n        console.error('处理主数据失败:', e)\r\n      }\r\n    },\r\n\r\n    // 处理地图数据更新的回调函数\r\n    handleMapData(data) {\r\n      try {\r\n        if (data.lng !== undefined && data.lat !== undefined) {\r\n          const lng = parseFloat(data.lng), lat = parseFloat(data.lat)\r\n          if (!isNaN(lng) && !isNaN(lat) && lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90) {\r\n            this.lnglat = `${lng.toFixed(6)},${lat.toFixed(6)}`\r\n            this.marker?.setPosition([lng + 0.01, lat - 0.001])\r\n            this.map?.panTo([lng + 0.01, lat - 0.001], { duration: 300 })\r\n          }\r\n        }\r\n        if (data.cogt !== undefined) {\r\n          const angle = parseFloat(data.cogt)\r\n          if (!isNaN(angle)) {\r\n            this.course = `${angle.toFixed(1)}°`\r\n            this.marker?.setRotation(((angle % 360) + 360) % 360)\r\n          }\r\n        }\r\n        this.mapConn = true\r\n      } catch (e) {\r\n        this.mapConn = false\r\n        console.error('处理地图数据失败:', e)\r\n      }\r\n    },\r\n\r\n    // 处理连接状态变化\r\n    handleConnectionStatus(status) {\r\n      this.mainConn = status\r\n      this.mapConn = status\r\n    }\r\n  },\r\n  mounted() {\r\n    // Vue 2 中使用 $nextTick\r\n    this.$nextTick(() => {\r\n      this.initCharts()\r\n      this.initMap()\r\n      \r\n      // 订阅 SSE 数据更新（使用全局挂载的 this.$sseService）\r\n      if (this.$sseService) {\r\n        this.$sseService.onMainData(this.handleMainData)\r\n        this.$sseService.onMapData(this.handleMapData)\r\n        this.$sseService.onConnectionStatus(this.handleConnectionStatus)\r\n      }\r\n      \r\n      // 初始刷新一次数据\r\n      this.refresh()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    // 取消订阅，避免内存泄漏\r\n    if (this.$sseService) {\r\n      this.$sseService.offMainData(this.handleMainData)\r\n      this.$sseService.offMapData(this.handleMapData)\r\n      this.$sseService.offConnectionStatus(this.handleConnectionStatus)\r\n    }\r\n    \r\n    // 清理图表和地图\r\n    if (this.tempChart) this.tempChart.dispose()\r\n    if (this.humChart) this.humChart.dispose()\r\n    if (this.map) this.map.destroy()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n* { margin: 0; padding: 0; box-sizing: border-box; }\r\n.dashboard { font-family: 'Microsoft YaHei', sans-serif; display: flex; flex-direction: column; background: #f5f7fa; min-height: 100vh; }\r\n\r\n/* 顶部栏 */\r\n.top-bar { display: flex; justify-content: space-between; align-items: center; padding: 1rem 2rem; background: #2c3e50; color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); flex-wrap: wrap; gap: 1rem; }\r\n.weather-info { display: flex; gap: 1.5rem; font-size: 0.9rem; color: #e0e0e0; }\r\n.conn-status { display: flex; align-items: center; gap: 0.5rem; }\r\n.dot { display: inline-block; width: 10px; height: 10px; border-radius: 50%; background: #e74c3c; }\r\n.dot.green { background: #27ae60; }\r\n.currDate { font-size: 0.9rem; }\r\n\r\n/* 主内容区 */\r\n.main-content { flex: 1; padding: 1.5rem 2rem; display: flex; flex-direction: column; gap: 2rem; overflow-y: auto; }\r\nh2 { font-size: 1.2rem; color: #2c3e50; margin-bottom: 1rem; padding-bottom: 0.5rem; border-bottom: 1px solid #e0e0e0; }\r\n\r\n/* 状态卡片 */\r\n.status-cards .cards { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; height: 140px; }\r\n.card { background: #fff; border-radius: 6px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 1rem; display: flex; flex-direction: column; justify-content: center; gap: 0.5rem; }\r\n.card.warn { border-left: 4px solid #e74c3c; }\r\n.card .val { font-size: 1.8rem; font-weight: bold; color: #2c3e50; }\r\n\r\n/* 图表区域 */\r\n.charts .charts-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1.5rem; height: 400px; }\r\n.chart-box .chart { width: 100%; height: 100%; min-height: 250px; }\r\n\r\n\r\n.device-info .info-grid {\r\n  height: auto;\r\n  padding: 1rem;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.device-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  gap: 1.2rem;\r\n}\r\n\r\n/* 设备卡片通用样式 */\r\n.device-grid .card {\r\n  height: 100%;\r\n  min-height: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.device-grid .card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n}\r\n\r\n/* 设备图标样式 */\r\n.device-card .icon {\r\n  font-size: 1.8rem;\r\n  left: 30%;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n/* 饲料卡片特殊调整 */\r\n.feed-card {\r\n  grid-column: span 2;\r\n  min-height: 160px;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .device-grid {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  .feed-card {\r\n    grid-column: span 2;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .device-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .feed-card {\r\n    grid-column: span 1;\r\n  }\r\n}\r\n\r\n/* 饲料重量进度条样式 */\r\n.feed-card .progress-container { display: flex; align-items: center; gap: 1rem; justify-content: center; flex: 1; }\r\n.progress-bar {\r\n  width: 60px;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  background-color: #f5f5f5;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1) inset;\r\n}\r\n.progress-fill {\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  transition: height 0.8s ease;\r\n  border-radius: 8px;\r\n}\r\n.progress-marker {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: #333;\r\n  transform: translateY(50%);\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\r\n}\r\n.progress-fill.low { \r\n  background: linear-gradient(to top, #e74c3c, #ff5252) !important;\r\n  animation: pulse 1.5s infinite; \r\n}\r\n.weight-info { \r\n  display: flex; \r\n  flex-direction: column; \r\n  gap: 0.5rem; \r\n  align-items: center; \r\n}\r\n.weight-info span {\r\n  font-weight: 500;\r\n}\r\n.low-warning {\r\n  color: #e74c3c;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  animation: shake 1s infinite;\r\n}\r\n\r\n/* 设备列表 */\r\n.device-list { display: flex; flex-direction: column; gap: 0.8rem; }\r\n.device-item { padding: 0.6rem 0.8rem; border-radius: 4px; background: #fafafa; font-size: 0.9rem; display: flex; align-items: center; gap: 0.8rem; }\r\n.icon { font-size: 1.1rem; }\r\n.status { font-weight: 500; }\r\n.status.on { color: #27ae60; }\r\n\r\n/* 地图区域 */\r\n.map-container { width: 100%; height: 600px; position: relative; border-radius: 6px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); overflow: hidden; }\r\n.map-view { width: 100%; height: 100%; }\r\n.map-status { position: absolute; top: 15px; right: 15px; background: rgba(255,255,255,0.9); padding: 0.5rem 1rem; border-radius: 4px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 0.85rem; }\r\n.map-dot { display: inline-block; width: 8px; height: 8px; border-radius: 50%; background: #e74c3c; margin-left: 5px; }\r\n.map-dot.green { background: #27ae60; }\r\n.map-data { position: absolute; bottom: 15px; left: 15px; background: rgba(255,255,255,0.9); padding: 0.8rem; border-radius: 6px; box-shadow: 0 2px 8px rgba(0,0,0,0.15); font-size: 0.9rem; display: flex; gap: 1.5rem; }\r\n.map-data > div { display: flex; gap: 0.5rem; }\r\n\r\n/* 底部区域 */\r\n.footer { height: 50px; display: flex; justify-content: space-between; align-items: center; padding: 0 2rem; background: #2c3e50; color: #fff; font-size: 0.9rem; }\r\n.refresh { background: #3498db; color: #fff; border: none; border-radius: 4px; padding: 0.4rem 0.8rem; display: flex; align-items: center; gap: 0.5rem; cursor: pointer; }\r\n.refresh:hover { background: #2980b9; }\r\n\r\n/* 响应式 */\r\n@media (max-width: 768px) {\r\n  .charts-grid { grid-template-columns: 1fr; height: auto; gap: 1rem; }\r\n  .chart-box { height: 400px; }\r\n  .info-grid { flex-direction: column; height: auto; gap: 1rem; }\r\n  .status-group, .device-list { height: auto; min-height: 300px; }\r\n  .map-container { height: 400px; }\r\n}\r\n\r\n/* 动画效果 */\r\n@keyframes pulse { \r\n  0% { opacity: 1; } \r\n  50% { opacity: 0.6; } \r\n  100% { opacity: 1; } \r\n}\r\n\r\n@keyframes shake {\r\n  0%, 100% { transform: translateX(0); }\r\n  25% { transform: translateX(-3px); }\r\n  75% { transform: translateX(3px); }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}